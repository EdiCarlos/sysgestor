<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTipProduto.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAACMuAAAjLgAAAAEAAAAB
        AAD///8A3fP6AMLu+QDy+fsAZN79AKPo+ADM7fkA5PX8AKTn+QBp5f8Ar+b2AK3q+gBr6/4AuOn5AJro
        +wBx8/4Acvr/AFzU8gBUvtkAVsfhAGzy/gBj4/MAednsAHnm/ABg1+8ADzxhAEGeuAAJOFEAX+D2AEi8
        4wBErNEASq7DAEasvwC28PUAPpi4AAQ4cABCp8YAATRSABZzlwAVg6wAPJ+3AEipuwBdvMwAwvD8AAQs
        UABFrMUABVVwAC6YrgCC0toASqe3AGO0wwCc0NoA2OzvALns9gBk6/4AQJmzAFDE1wDQ/v4A3e7xAMLr
        8QBk5f4AWdToAIjg9QDL6PQA6PL1AFrV/gBb2/8AXeP+AH3l9QCV0O8ATLz8AFDF/gBPzv4AVdP/AFbb
        /gBc6v4AZPP+AK3h7QBHsOUAQartADme3gBGufwAVuX+AFz2/gCR2+QA7/b5ALDZ7gBtstsANJHSAD2k
        5QA/r/IAT9L+AFvV4gDg7/YAMIzKADGQuwArhbMAPqToAGT9/wDy9vcA4ervACmFrQABT2IAJYCjAEfB
        /gBX6P4AXvj/AEq5zwCx1eQAhrnRAF2hwwBFm8cAFmuSACqItQAZVGUASsH9AC19kAAjdKQAJ3ywACyE
        vAAVbo4AN5jYAAZDWQAYVmgAVMz+AGn9/wBRvtMATbC8AEqr5QA+q+wASK7qADegywAMdY0APqjKAHbB
        ygCR2fwASLnbAMPj5wBEo7wAR7LNAIfJ0wBpzvkAiM7lANTs8wCX2PQAUcbyAEaw2AB1u9YANomiADSG
        nACFtcEAQabYACFjegB4kJkA1dbYAGOy5QBqipcArrS3AMbHygDu7u8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdm2+cnZ6anwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1Gl5iY
        mZpjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXwdlJWWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI+Q
        fJGSHpNVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaNfHxBQUJCQxGONAAAAAAAAAAAAAAAAAAAAAAAAAAN
        fHx8QUFBQkNLNkyLjAMAAAAAAAAAAAAAAAAAAAAAB3x8fHxJQUFDS0tMfUyKhgAAAAAAAAAAAAAAAAAA
        AACHR3NHfB18iIhCNkx9fT0xiQAAAAAAAAAAAAAAAAAAAIBZgU+CEkaDhIVKNkx9Yn+GAAAAAAAAAAAA
        AAAAAAA6dXV2d2d4eWB6e3xKS2p9fn8AAAAAAAAAAAAAAAAAAANsbW5vcHBecS5yc0ppamItdFUAAAAA
        AAAAAAAAAAAAAAAAAABjZF5lZmdoW2lqYmspAAAAAAAAAAAAAAAAAAAAAAAAAABdXl9gYVFbUlNiFUQA
        AAAAAAAAAAAAAAAAAAAAAABVVldYUFlaUVtSU0xcOwAAAAAAAAAAAAAAAAAAAAAARU5PUE9PUUZISlJT
        FVQAAAAAAAAAAAAAAAAAAAAAAEVGRkZGR0dISUpLTDZNAAAAAAAAAAAAAAAAAAAAAABAQUFBQUFCBEFC
        QzZEAQAAAAAAAAAAAAAAAAAAAAAAADsJPDw8DAwMPD0+PwAAAAAAAAAAAAAAAAAAAAAAAAAANQw2DAw3
        FDgmFTk0OgAAAAAAAAAAAAAAAAAAAAAAAAArDAwMGiwULS4vMDExMjM0AAAAAAAAAAAAAAAAAAAAAAEJ
        CQwiIwwkJSYnKCkpKSoAAAAAAAAAAAAAAAAAAAAAABcJCRgZDBobFRwdHh8gIQAAAAAAAAAAAAAAAAAA
        AAAAAgkJCREJEhMUDxAQFRYAAAAAAAAAAAAAAAAAAAAAAAAADgkJCQkMDAwPDxAPBwAAAAAAAAAAAAAA
        AAAAAAAAAAAACwkJCQkJCQwMDA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAABwgECQkJCQkKAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAwQEBQIGAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>